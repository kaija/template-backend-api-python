# =============================================================================
# SECRETS CONFIGURATION TEMPLATE
# =============================================================================
# Copy this file to .secrets.toml and update with your actual secrets
# NEVER commit .secrets.toml to version control!

# =============================================================================
# DEVELOPMENT SECRETS
# =============================================================================
[development]
# Database credentials
database_url = "postgresql+asyncpg://postgres:dev_password@localhost:5432/api_dev"

# JWT secret key (generate with: openssl rand -hex 32)
secret_key = "development-secret-key-replace-in-production-with-secure-random-key"

# Redis connection
redis_url = "redis://localhost:6379/0"

# External service API keys (if needed)
# email_api_key = "your-email-service-api-key"
# storage_api_key = "your-storage-service-api-key"

# =============================================================================
# STAGING SECRETS
# =============================================================================
[staging]
# Database credentials
database_url = "postgresql+asyncpg://api_user:staging_password@staging-db:5432/api_staging"

# JWT secret key
secret_key = "staging-secret-key-should-be-different-from-dev-and-prod"

# Redis connection
redis_url = "redis://staging-redis:6379/0"

# Sentry DSN for error tracking
sentry_dsn = "https://your-sentry-dsn@sentry.io/staging-project-id"

# External service API keys
# email_api_key = "staging-email-service-api-key"
# storage_api_key = "staging-storage-service-api-key"

# =============================================================================
# PRODUCTION SECRETS
# =============================================================================
[production]
# Database credentials
database_url = "postgresql+asyncpg://api_user:super_secure_password@prod-db:5432/api_production"

# JWT secret key (MUST be cryptographically secure)
secret_key = "production-secret-key-must-be-cryptographically-secure-and-unique"

# Redis connection
redis_url = "redis://prod-redis:6379/0"

# Sentry DSN for error tracking
sentry_dsn = "https://your-sentry-dsn@sentry.io/production-project-id"

# External service API keys
# email_api_key = "production-email-service-api-key"
# storage_api_key = "production-storage-service-api-key"

# AWS credentials (if using AWS services)
# aws_access_key_id = "your-aws-access-key"
# aws_secret_access_key = "your-aws-secret-key"
# aws_s3_bucket = "your-production-bucket"
# aws_s3_region = "us-east-1"

# SMTP configuration (if using email)
# smtp_host = "smtp.your-provider.com"
# smtp_port = 587
# smtp_username = "your-smtp-username"
# smtp_password = "your-smtp-password"
# smtp_tls = true

# =============================================================================
# TEST SECRETS
# =============================================================================
[test]
# Test database (separate from development)
database_url = "postgresql+asyncpg://postgres:test_password@localhost:5432/api_test"
test_database_url = "postgresql+asyncpg://postgres:test_password@localhost:5432/api_test"

# Test-specific secret key
secret_key = "test-secret-key-for-testing-only-not-secure"

# Test Redis
redis_url = "redis://localhost:6379/1"

# Disable external services in tests
sentry_dsn = ""